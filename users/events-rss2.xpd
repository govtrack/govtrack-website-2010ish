<?xml-stylesheet xpath="/*/Templates" type="text/xsl" ?>
<?mime-type text/xml ?>
<?cache public?>
<?expires-in 6:00?>
<rss version="2.0">
<channel xml:space="preserve">
	<title><description2/></title>
	<link>http://www.govtrack.us/users/events.xpd?<query/></link>
	<description>Legislative events tracked by GovTrack.us in the following categories: <makedescription/></description>

	<generator>GovTrack.us &lt;comments@govtrack.us&gt;</generator>
	<copyright>This data is left in the public domain.</copyright>

	<pubDate><date/></pubDate>
	<ttl>360</ttl>

	<image>
		<url>http://www.govtrack.us/media/logo32x32.png</url>
		<title>GovTrack.us</title>
		<link>http://www.govtrack.us</link>
	</image>

	<items/>
</channel>
	
	<Templates
		xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
		xmlns:http-context = "HttpContext"
		xmlns:govtrack-util="assembly://GovTrackWeb/GovTrack.Web.Util"
		xmlns:govtrack-login="assembly://GovTrackWeb/GovTrack.Web.Login"
		xmlns:govtrack-events="assembly://GovTrackWeb/GovTrack.Web.Pages.Users.Events"
		exclude-result-prefixes="http-context govtrack-util govtrack-login govtrack-events"
		>
		
		<xsl:variable name="monitors" select="govtrack-events:GetMonitors()"/>
		<xsl:variable name="events" select="govtrack-events:GetEvents(4, 1, 0)"/>
		
		<xsl:template match="old_date"><xsl:value-of select="govtrack-util:NowRFC822String()"/></xsl:template>
		
		<xsl:template match="date">
			<xsl:if test="count($events)=0">
				<xsl:value-of select="govtrack-util:TodayRFC822String()"/>
			</xsl:if>
			<xsl:for-each select="$events">
				<xsl:sort select="date" order="descending"/>
				<xsl:if test="position()=1">
					<xsl:value-of select="govtrack-util:DTToRFC822String(date)"/>
				</xsl:if>
			</xsl:for-each>
		</xsl:template>
		
		<xsl:template match="makedescription">
			<xsl:for-each select="$monitors">
				<xsl:variable name="m" select="govtrack-login:MonitorLink(.)"/>
				<xsl:value-of select="$m/title"/>
				<xsl:if test="not(position()=last())">, </xsl:if>
			</xsl:for-each>			
		</xsl:template>

		<xsl:template match="description2">
			<xsl:choose>
			<xsl:when test="count($monitors) &gt;= 2">
				<xsl:text>GovTrack.us Tracked Events</xsl:text>
			</xsl:when>
			<xsl:otherwise>
			<xsl:for-each select="$monitors">
				<xsl:variable name="m" select="govtrack-login:MonitorLink(.)"/>
				<xsl:value-of select="$m/title"/>
				<xsl:if test="not(position()=last())">, </xsl:if>
			</xsl:for-each>
			<xsl:text> -- Tracked by GovTrack.us</xsl:text>
			</xsl:otherwise>
			</xsl:choose>
		</xsl:template>
		
		<xsl:template match="query">
			<xsl:value-of select="govtrack-events:GetMonitorsEncodedFromQuery()"/>
		</xsl:template>

		<xsl:template match="items">
			<xsl:for-each select="$events">
				<xsl:sort select="date" order="descending"/>
				
				<item xml:space="preserve">
					<pubDate><xsl:value-of select="govtrack-util:DTToRFC822String(date)"/></pubDate>
					<xsl:for-each select="monitors/*">
						<category domain="http://www.govtrack.us/congress/subjects.xpd?type=crs">
							<xsl:value-of select="text"/>
						</category>
					</xsl:for-each>			
					<link><xsl:value-of select="link"/></link>
					<title><xsl:value-of select="typename"/>: <xsl:value-of select="title"/></title>
					<description>
						&lt;table&gt;
						&lt;tr&gt;

						&lt;td&gt;
						<xsl:if test="not(summary = '')">
							&lt;p&gt;<xsl:value-of select="summary"/>&lt;/p&gt;
						</xsl:if>
						<xsl:for-each select="specifics/*">
							&lt;p&gt;
							&lt;a href="<xsl:value-of select="link"/>"&gt;<xsl:value-of select="tag"/>&lt;/a&gt;
							<xsl:if test="text">: <xsl:value-of select="text"/></xsl:if>
							&lt;/p&gt;
						</xsl:for-each>
						<xsl:if test="not(http-context:param('hint')='no')">
						&lt;p&gt;[This event matched these trackers:
						<xsl:for-each select="monitors/*">
							<xsl:if test="position()=last() and position() &gt; 1"> and </xsl:if>
							&lt;a href="<xsl:value-of select="link"/>"&gt;<xsl:value-of select="text"/>&lt;/a&gt;
							<xsl:if test="position() &lt; last() and position() &gt; 1">, </xsl:if>
						</xsl:for-each>			
						]&lt;/p&gt;
						</xsl:if>
						&lt;/td&gt;

						<xsl:if test="image">
							&lt;td&gt;
								&lt;img src="<xsl:value-of select="image"/>" style="border: 1px solid #000088"/&gt;
							&lt;/td&gt;
						</xsl:if>

						&lt;/tr&gt;
						&lt;/table&gt;
					</description>
				</item>
				
			</xsl:for-each>
		</xsl:template>
	</Templates>
</rss>

